#### CHANGE DIRECTORY

$ScriptDirectory = Split-Path -Path $MyInvocation.MyCommand.Definition -Parent
$TargetDirectory = Join-Path -Path $ScriptDirectory -ChildPath "..\assets\auto-spine"
$FullTargetDirectory = Resolve-Path -Path $TargetDirectory
Set-Location -Path $FullTargetDirectory

####


# Step 1: User Selection for Mode
$mode = Read-Host "Select mode [1] - SKEL (default) or [2] - JSON"
if (-not $mode) { $mode = "1" }

$EXT = if ($mode -eq "2") { ".json" } else { ".skel" }

# Step 2: User Selection for Image Format
$imageMode = Read-Host "Select image mode [1] webp (default), [2] jpg, [3] png"
if (-not $imageMode) { $imageMode = "1" }

$IMGEXT = switch ($imageMode) {
    "2" { ".jpg" }
    "3" { ".png" }
    default { ".webp" }
}

# Step 3: Initialize Arrays for Imports and Uses
$IMPORTS = @()
$USES = @()

# Step 4: Process Each Subfolder in the Current Directory
$CurrentDirectory = Get-Location

Get-ChildItem -Directory -Path $CurrentDirectory | ForEach-Object {
    $SLUG = $_.Name
    $BONES = Get-ChildItem -Path $_.FullName -Filter "*$EXT" | Select-Object -ExpandProperty Name
    $ATLAS = Get-ChildItem -Path $_.FullName -Filter "*.atlas" | Select-Object -ExpandProperty Name
    $IMAGE = Get-ChildItem -Path $_.FullName -Filter "*$IMGEXT" | Select-Object -ExpandProperty Name

    if ($BONES -and $ATLAS -and $IMAGE) {
        # Create import strings
        $IMPORTS += "import ${SLUG}Img from 'assets/auto-spine/$SLUG/$IMAGE'"
        $IMPORTS += "import ${SLUG}Bones from 'assets/auto-spine/$SLUG/$BONES'"
        $IMPORTS += "import ${SLUG}Atlas from 'assets/auto-spine/$SLUG/$ATLAS'"

        # Create uses strings
        $USES += "    imageLoader.addTexture(loadSpineSkelOrJson('$SLUG', ${SLUG}Img, ${SLUG}Bones, ${SLUG}Atlas))"
    }
}

# Step 5: Create the importSpines.js File
$OutputContent = @"
// This file was autogenerated by the auto-spine.ps1 script.

$($IMPORTS -join "`n")

export default (imageLoader, loadSpineSkelOrJson) => {
$($USES -join "`n")
}
"@

# Save to importSpines.js in the current directory
$OutputFile = Join-Path -Path $CurrentDirectory -ChildPath "importSpines.js"
$OutputContent | Set-Content -Path $OutputFile

Write-Output "importSpines.js created at $OutputFile"

Write-Host "Press any key to exit..."
$x = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")